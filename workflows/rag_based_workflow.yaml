name: RAG-Based Workflow
steps:
  - name: Categorize Issue
    type: llm
    prompt: |
      Analyze the following GitHub issue:
      Title: {title}
      Body: {body}
      Categorize this issue as 'bug', 'triage', 'feature request', or 'no'. Respond with a JSON object containing only a "category" key with a value from the above list.
    output_schema: |
      {
        "category": "bug|triage|feature request|no"
      }
    actions:
      - name: Categorize
        condition: "category != 'no'"
        steps:
          - type: label
            labels: ["{category}"]
        next_action: "Check for Response"
      - name: No Category
        condition: "category == 'no'"
        steps:
          - type: comment
            content: "This issue does not fall into a defined category. Please provide more details."
        next_action: "break"

  - name: Check for Response
    type: llm
    prompt: |
      Analyze the following GitHub issue:
      Title: {title}
      Body: {body}
      Does this issue warrant a response based on the following criteria: [list of criteria]. Respond with a JSON object containing only a "response_warranted" key with a value of "yes" or "no".
    output_schema: |
      {
        "response_warranted": "yes|no"
      }
    actions:
      - name: Generate Response
        condition: "response_warranted == 'yes'"
        steps:
          - type: retrieve_context
            urls: ["https://example.com/doc1.pdf", "https://example.com/doc2.pdf"]
          - type: generate_response
            prompt: |
              Generate a response to the following GitHub issue:
              Title: {title}
              Body: {body}
              Category: {category}
              Context: {context}
          - type: comment
            content: "{response}"
        next_action: "break"
      - name: No Response
        condition: "response_warranted == 'no'"
        steps:
          - type: comment
            content: "This issue does not warrant a response based on the defined criteria."
        next_action: "break"
